:root {
  --link-color: #0071e4;
  --code-color: #d8009c;
  --code-block-bg: #1E232F;
}

.mode-dark {
  --link-color: #82aaff;
  --code-color: #ff6bd6;
  --code-block-bg: #171c26;
}

html {
  box-sizing: border-box;
  line-height: 1.5;
  text-rendering: optimizeLegibility;
  -webkit-text-size-adjust: 100%;
}

/**
 * Allow adding a border to an element by just adding a border-width.
 *
 * By default, the way the browser specifies that an element should have no
 * border is by setting it's border-style to `none` in the user-agent
 * stylesheet.
 *
 * In order to easily add borders to elements by just setting the `border-width`
 * property, we change the default border-style for all elements to `solid`, and
 * use border-width to hide them instead. This way our `border` utilities only
 * need to set the `border-width` property instead of the entire `border`
 * shorthand, making our border utilities much more straightforward to compose.
 *
 * https://github.com/tailwindcss/tailwindcss/pull/116
 */
 
*,
*::before,
*::after {
  box-sizing: inherit;
  border-width: 0;
  border-style: solid;
  border-color: currentColor;
}

body {
  margin: 0;
}

main {
  display: block;
}

hr {
  border: 0px solid #b8c2cc;
  border-bottom-width: 1px;
  box-sizing: content-box;
  height: 0;
  margin: 2rem 0;
  overflow: visible;
}

a {
  background-color: transparent;
  color: var(--link-color);
  text-decoration: inherit;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}

/**
* Images
*/
img {
  max-width: 100%;
  vertical-align: middle;
}

.mode-dark img {
  filter: brightness(.8) contrast(1.2);
}

@media all and (min-width: 768px) {
  .post-content a:hover { text-decoration: underline; }
}

/**
* Reset margins on these things
*/
p, blockquote, pre,
ul, ol, dl, figure {
  margin-top: 0;
  margin-bottom: 1em;
}

h1, h2, h3, h4, h5, h6 {
  margin: 0;
  margin-bottom: 1em;
}

/**
* Paragraphs, ul, ol
*/
ul, p, ol {
  line-height: 1.8;
}

ul {
  list-style-type: disc;
  padding-left: 1.5rem;
}

ol {
  list-style-type: decimal;
  padding-left: 1.5rem;
}

pre, code, .code, .monospace {
  font-family: 'SFMono-Regular', Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;
}

code {
  color: var(--code-color);
  font-size: .875rem;
}

code:not([class*="language-"])::before,
code:not([class*="language-"])::after {
  content: '`';
}

/**
* prism.js theme
*/

code[class*="language-"],
pre[class*="language-"] {
  color: #a8b5d1;
  background: none;
  font-size: inherit;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  line-height: 1.5;

  -moz-tab-size: 2;
  -o-tab-size: 2;
  tab-size: 2;

  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
}

/* Code blocks */
pre[class*="language-"] {
  background: var(--code-block-bg);
  border-radius: 0;
  margin: 1rem -1rem 2rem;
  overflow: auto;
  padding: 1rem;
  width: 100vw;
}

@media all and (min-width: 640px) {
  pre[class*="language-"] {
    border-radius: .25rem;
    margin-left: 0;
    margin-right: 0;
    width: auto;
  }
}

.token.comment,
.token.block-comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: #506686;
}

.token.punctuation {
  color: #a8b5d1;
}

.token.tag,
.token.attr-name,
.token.namespace,
.token.boolean,
.token.deleted,
.token.interpolation-punctuation {
  color: #ff5874;
}

.token.function-name,
.token.function {
  color: #82aaff;
}

.token.number {
  color: #ffbf7a;
}

.token.property,
.token.class-name,
.token.constant,
.token.variable,
.token.symbol {
  color: #fffa9e;
}

.token.selector,
.token.important,
.token.atrule,
.token.keyword,
.token.builtin {
  color: #c792ea;
}

.token.string,
.token.char,
.token.attr-value,
.token.regex,
.token.inserted {
  color: #6af699;
}

.token.operator,
.token.entity,
.token.url {
  color: #4ff2f8;
}

.token.important,
.token.bold {
  font-weight: bold;
}
.token.italic {
  font-style: italic;
}

.token.entity {
  cursor: help;
}

@tailwind utilities;